branches:
  only:
    - master

sudo: required

services:
  - docker

env:
  - PHP_VERSION=5.6
  - PHP_VERSION=7.0
  - PHP_VERSION=hhvm

matrix:
  fast_finish: true
#  allow_failures:
#    - env: PHP_VERSION=7.0

# sudo: false

cache:
  directories:
    - ./vendor
    - ./node_modules
    - ./public/bower_components

before_install:
  - curl -L https://github.com/docker/compose/releases/download/1.5.2/docker-compose-`uname -s`-`uname -m` > docker-compose; chmod +x docker-compose; true
  - sudo mv docker-compose /usr/local/bin/
  - pwd && docker -v && docker info && docker-compose -v

install:
  - chmod -R 0777 ./storage/logs

  - export PR=https://api.github.com/repos/$TRAVIS_REPO_SLUG/pulls/$TRAVIS_PULL_REQUEST
  - export BRANCH=$(if [ "$TRAVIS_PULL_REQUEST" == "false" ]; then echo $TRAVIS_BRANCH; else echo `curl -s $PR | jq -r .head.ref`; fi)
  - echo "TRAVIS_BRANCH=$TRAVIS_BRANCH, PR=$PR, BRANCH=$BRANCH"

  # Docker build
  - if [[ $BRANCH == 'upgrades' ]]; then docker build -qf storage/build/scripts/nginx/Dockerfile -t audithsoftworks/basis:nginx .; fi;
  - if [[ $BRANCH == 'upgrades' && $PHP_VERSION == '5.6' ]]; then docker build -qf storage/build/scripts/php_5.6/Dockerfile -t audithsoftworks/basis:php_5.6 .; fi;
    if [[ $BRANCH == 'upgrades' && $PHP_VERSION == '7.0' ]]; then docker build -qf storage/build/scripts/php_7/Dockerfile -t audithsoftworks/basis:php_7 .; fi;
    if [[ $BRANCH == 'upgrades' && $PHP_VERSION == 'hhvm' ]]; then docker build -qf storage/build/scripts/hhvm/Dockerfile -t audithsoftworks/basis:hhvm .; fi;
  - if [[ $BRANCH == 'upgrades' && $PHP_VERSION == '5.6' ]]; then docker build -qf storage/build/scripts/php_5.6-fpm/Dockerfile -t audithsoftworks/basis:php_5.6-fpm .; fi;
    if [[ $BRANCH == 'upgrades' && $PHP_VERSION == '7.0' ]]; then docker build -qf storage/build/scripts/php_7-fpm/Dockerfile -t audithsoftworks/basis:php_7-fpm .; fi;
  - docker images

  # Docker Compose
  - case $PHP_VERSION in '5.6') export DOCKER_COMPOSE_FILE='./docker-compose-php56.yml' ;; '7.0') export DOCKER_COMPOSE_FILE='./docker-compose-php7.yml' ;; 'hhvm') export DOCKER_COMPOSE_FILE='./docker-compose-hhvm.yml' ;; esac
    && docker-compose -f $DOCKER_COMPOSE_FILE up -d

  # Create database for MariaDb and PgSQL
  - sleep 15;
    docker-compose ps;
    mysql -h $(docker inspect -f '{{ .NetworkSettings.IPAddress }}' basis_mariadb10_1) -u root -e "CREATE DATABASE IF NOT EXISTS basis;";
    if [[ $PHP_VERSION != 'hhvm' ]]; then psql -h $(docker inspect -f '{{ .NetworkSettings.IPAddress }}' basis_postgres94_1) -U postgres -c "CREATE DATABASE basis;"; fi;

  # Fix for /etc/hosts file
  - docker exec basis_phpCli_1 echo $(docker inspect -f '{{ .NetworkSettings.IPAddress }}' basis_nginx_1) basis.audith.org | sudo tee -a /etc/hosts;

  # dotEnv file for initial test setup
  - cat .env.example | sed s/DB_HOST=.*/DB_HOST=mariadb10/g | sed s/DB_USERNAME=.*/DB=mysql/g | sed s/DB_PASSWORD=.*//g | tee .env

before_script:
  # Build project dependencies
  - docker exec basis_phpCli_1 /bin/bash -c "
      cd /home/basis && npm update && bower --config.interactive=false --allow-root update;

      cd /home/basis/public/bower_components/fine-uploader && npm install && make build;

      cd /home/basis && git clone --depth=1 --branch=1.14.0 https://github.com/jzaefferer/jquery-validation.git /home/basis/public/bower_components/jquery.validation;
      cd /home/basis/public/bower_components/jquery.validation && rm -rf .git && npm install && grunt;

      cd /home/basis && git clone --depth=1 https://github.com/google/woff2.git /home/basis/storage/build/tools/woff2;
      cd /home/basis/storage/build/tools/woff2 && git submodule init && git submodule update && make clean all;

      cd /home/basis && git clone --depth=1 https://github.com/zoltan-dulac/css3FontConverter.git /home/basis/storage/build/tools/css3_font_converter;

      pwd;
      cp -r ./public/bower_components/bootstrap/fonts ./public/fonts/glyphicons;
      cp -r ./public/bower_components/fontawesome/fonts ./public/fonts/font_awesome;
      cp -r ./public/bower_components/simple-line-icons-webfont/fonts ./public/fonts/simple-line-icons;
      cp -r ./public/bower_components/google-fonts/apache/opensans ./public/fonts/opensans;
      cp -r ./public/bower_components/google-fonts/ofl/armata ./public/fonts/armata;
      cp -r ./public/bower_components/google-fonts/ofl/marcellus ./public/fonts/marcellus;
      cp -r ./public/bower_components/google-fonts/ofl/pontanosans ./public/fonts/pontano_sans;
      cp -r ./public/bower_components/google-fonts/ofl/montserrat ./public/fonts/montserrat;

      chmod -R +x /home/basis/storage/build/tools;
      PATH=$PATH:/home/basis/storage/build/tools/sfnt2woff:/home/basis/storage/build/tools/woff2 ./storage/build/tools/css3_font_converter/convertFonts.sh --use-font-weight --output=public/fonts/simple-line-icons/stylesheet.css public/fonts/simple-line-icons/*.ttf;
      PATH=$PATH:/home/basis/storage/build/tools/sfnt2woff:/home/basis/storage/build/tools/woff2 ./storage/build/tools/css3_font_converter/convertFonts.sh --use-font-weight --output=public/fonts/opensans/stylesheet.css public/fonts/opensans/*.ttf;
      PATH=$PATH:/home/basis/storage/build/tools/sfnt2woff:/home/basis/storage/build/tools/woff2 ./storage/build/tools/css3_font_converter/convertFonts.sh --use-font-weight --output=public/fonts/montserrat/stylesheet.css public/fonts/montserrat/*.ttf;
      PATH=$PATH:/home/basis/storage/build/tools/sfnt2woff:/home/basis/storage/build/tools/woff2 ./storage/build/tools/css3_font_converter/convertFonts.sh --use-font-weight --output=public/fonts/pontano_sans/stylesheet.css public/fonts/pontano_sans/*.ttf;
      PATH=$PATH:/home/basis/storage/build/tools/sfnt2woff:/home/basis/storage/build/tools/woff2 ./storage/build/tools/css3_font_converter/convertFonts.sh --use-font-weight --output=public/fonts/armata/stylesheet.css public/fonts/armata/*.ttf;
      PATH=$PATH:/home/basis/storage/build/tools/sfnt2woff:/home/basis/storage/build/tools/woff2 ./storage/build/tools/css3_font_converter/convertFonts.sh --use-font-weight --output=public/fonts/marcellus/stylesheet.css public/fonts/marcellus/*.ttf;

      compass compile;
      gulp;
      composer selfupdate && composer update --prefer-source --no-interaction;
    ";

script:
  # Testing against MariaDb
  - docker exec basis_phpCli_1 /bin/bash -c "cd /home/basis; ./vendor/bin/phpunit --debug --verbose";

  # Switching to PgSQL 9.4
  - cat .env | sed s/DB_HOST=.*/DB_HOST=postgres94/g | sed s/DB=.*/DB=pgsql/g | tee .env

  # Testing against PgSQL 9.4
  - if [[ $PHP_VERSION != 'hhvm' ]]; then docker exec basis_phpCli_1 /bin/bash -c "cd /home/basis; ./vendor/bin/phpunit --debug --verbose"; fi;

notifications:
  hipchat: f504f9e2e6696c17589a7b49f4ce05@Audith.Basis
  webhooks:
    urls:
      - https://webhooks.gitter.im/e/08f753c8a771b72d290a
    on_success: change  # options: [always|never|change] default: always
    on_failure: always  # options: [always|never|change] default: always
    on_start: never     # options: [always|never|change] default: always
