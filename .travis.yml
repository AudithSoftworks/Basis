branches:
  only:
    - master

sudo: required

services:
  - docker

env:
  - PHP_VERSION=5.6
  - PHP_VERSION=hhvm

matrix:
  fast_finish: true
  allow_failures:
    - env: PHP_VERSION=7.0

# sudo: false

cache:
  directories:
    - ./vendor
    - ./node_modules
    - ./public/bower_components

before_install:
  - curl -L https://github.com/docker/compose/releases/download/1.5.2/docker-compose-`uname -s`-`uname -m` > docker-compose; chmod +x docker-compose; true
  - sudo mv docker-compose /usr/local/bin/
  - pwd && docker -v && docker info && docker-compose -v

install:
  - chmod -R 0777 ./storage/logs

  # Docker Compose
  - case $PHP_VERSION in '5.5') export DOCKER_COMPOSE_FILE='./docker-compose-php55.yml' ;; '5.6') export DOCKER_COMPOSE_FILE='./docker-compose-php56.yml' ;; 'hhvm') export DOCKER_COMPOSE_FILE='./docker-compose-hhvm.yml' ;; esac
    && docker-compose -f $DOCKER_COMPOSE_FILE pull
  - case $PHP_VERSION in '5.5') export DOCKER_COMPOSE_FILE='./docker-compose-php55.yml' ;; '5.6') export DOCKER_COMPOSE_FILE='./docker-compose-php56.yml' ;; 'hhvm') export DOCKER_COMPOSE_FILE='./docker-compose-hhvm.yml' ;; esac
    && docker-compose -f $DOCKER_COMPOSE_FILE up -d

  # Create database for MySQL and PgSQL
  - sleep 15;
    docker-compose ps;
    mysql -h $(docker inspect -f '{{ .NetworkSettings.IPAddress }}' basis_mysql56_1) -u root -e "CREATE DATABASE IF NOT EXISTS basis;";
    if [[ $PHP_VERSION != 'hhvm' ]]; then psql -h $(docker inspect -f '{{ .NetworkSettings.IPAddress }}' basis_postgres94_1) -U postgres -c "CREATE DATABASE basis;"; fi;

  # Fix for /etc/hosts file
  - case $PHP_VERSION in '5.5') export PHP_CONTAINER=basis_php55_1 NGINX_CONTAINER=basis_nginxForPhpFpm55_1 ;; '5.6') export PHP_CONTAINER=basis_php56_1 NGINX_CONTAINER=basis_nginxForPhpFpm56_1 ;; 'hhvm') export PHP_CONTAINER=basis_hhvmAsCli_1 NGINX_CONTAINER=basis_nginxForHhvm_1 ;; esac
    && docker exec $PHP_CONTAINER echo $(docker inspect -f '{{ .NetworkSettings.IPAddress }}' $NGINX_CONTAINER) basis.audith.org | sudo tee -a /etc/hosts;

  # dotEnv file for initial test setup
  - cat .env.example | sed s/DB_HOST=.*/DB_HOST=mysql56/g | sed s/DB_USERNAME=.*/DB=mysql/g | sed s/DB_PASSWORD=.*//g | tee .env
  - echo HIPCHAT_TOKEN=$HIPCHAT_TOKEN | tee -a .env
  - echo HIPCHAT_ROOM=$HIPCHAT_ROOM | tee -a .env
  - echo HIPCHAT_NAME=$HIPCHAT_NAME | tee -a .env

before_script:
  # Build project dependencies
  - case $PHP_VERSION in '5.5') export PHP_CONTAINER=basis_php55_1 ;; '5.6') export PHP_CONTAINER=basis_php56_1 ;; 'hhvm') export PHP_CONTAINER=basis_hhvmAsCli_1 ;; esac
    && docker exec $PHP_CONTAINER /bin/bash -c "
      cd /home/basis && npm update && bower --config.interactive=false --allow-root update;

      cd /home/basis/public/bower_components/fine-uploader && npm install && grunt package;

      cd /home/basis && git clone --depth=1 --branch=1.14.0 https://github.com/jzaefferer/jquery-validation.git /home/basis/public/bower_components/jquery.validation;
      cd /home/basis/public/bower_components/jquery.validation && rm -rf .git && npm install && grunt;

      cd /home/basis && git clone --depth=1 https://github.com/google/woff2.git /home/basis/storage/build/tools/woff2;
      cd /home/basis/storage/build/tools/woff2 && git submodule init && git submodule update && make clean all;

      cd /home/basis && git clone --depth=1 https://github.com/zoltan-dulac/css3FontConverter.git /home/basis/storage/build/tools/css3_font_converter;

      pwd;
      cp -r ./public/bower_components/bootstrap/fonts ./public/fonts/glyphicons;
      cp -r ./public/bower_components/fontawesome/fonts ./public/fonts/font_awesome;
      cp -r ./public/bower_components/simple-line-icons-webfont/fonts ./public/fonts/simple-line-icons;
      cp -r ./public/bower_components/google-fonts/apache/opensans ./public/fonts/opensans;
      cp -r ./public/bower_components/google-fonts/ofl/armata ./public/fonts/armata;
      cp -r ./public/bower_components/google-fonts/ofl/marcellus ./public/fonts/marcellus;
      cp -r ./public/bower_components/google-fonts/ofl/pontanosans ./public/fonts/pontano_sans;
      cp -r ./public/bower_components/google-fonts/ofl/montserrat ./public/fonts/montserrat;

      chmod -R +x /home/basis/storage/build/tools;
      PATH=$PATH:/home/basis/storage/build/tools/sfnt2woff:/home/basis/storage/build/tools/woff2 ./storage/build/tools/css3_font_converter/convertFonts.sh --use-font-weight --output=public/fonts/simple-line-icons/stylesheet.css public/fonts/simple-line-icons/*.ttf;
      PATH=$PATH:/home/basis/storage/build/tools/sfnt2woff:/home/basis/storage/build/tools/woff2 ./storage/build/tools/css3_font_converter/convertFonts.sh --use-font-weight --output=public/fonts/opensans/stylesheet.css public/fonts/opensans/*.ttf;
      PATH=$PATH:/home/basis/storage/build/tools/sfnt2woff:/home/basis/storage/build/tools/woff2 ./storage/build/tools/css3_font_converter/convertFonts.sh --use-font-weight --output=public/fonts/montserrat/stylesheet.css public/fonts/montserrat/*.ttf;
      PATH=$PATH:/home/basis/storage/build/tools/sfnt2woff:/home/basis/storage/build/tools/woff2 ./storage/build/tools/css3_font_converter/convertFonts.sh --use-font-weight --output=public/fonts/pontano_sans/stylesheet.css public/fonts/pontano_sans/*.ttf;
      PATH=$PATH:/home/basis/storage/build/tools/sfnt2woff:/home/basis/storage/build/tools/woff2 ./storage/build/tools/css3_font_converter/convertFonts.sh --use-font-weight --output=public/fonts/armata/stylesheet.css public/fonts/armata/*.ttf;
      PATH=$PATH:/home/basis/storage/build/tools/sfnt2woff:/home/basis/storage/build/tools/woff2 ./storage/build/tools/css3_font_converter/convertFonts.sh --use-font-weight --output=public/fonts/marcellus/stylesheet.css public/fonts/marcellus/*.ttf;

      compass compile;
      gulp;
      composer selfupdate && composer update --prefer-source --no-interaction;
    ";

script:
  # Testing against MySQL
  - case $PHP_VERSION in '5.5') export PHP_CONTAINER=basis_php55_1 ;; '5.6') export PHP_CONTAINER=basis_php56_1 ;; 'hhvm') export PHP_CONTAINER=basis_hhvmAsCli_1 ;; esac
    && docker exec $PHP_CONTAINER /bin/bash -c "cd /home/basis; ./vendor/bin/phpunit --debug --verbose";

  # Switching to PgSQL 9.4
  - cat .env | sed s/DB_HOST=.*/DB_HOST=postgres94/g | sed s/DB=.*/DB=pgsql/g | tee .env

  # Testing against PgSQL 9.4
  - case $PHP_VERSION in '5.5') export PHP_CONTAINER=basis_php55_1 ;; '5.6') export PHP_CONTAINER=basis_php56_1 ;; esac
    && if [[ $PHP_VERSION != 'hhvm' ]]; then docker exec $PHP_CONTAINER /bin/bash -c "cd /home/basis; ./vendor/bin/phpunit --debug --verbose"; fi;

notifications:
  hipchat: f504f9e2e6696c17589a7b49f4ce05@Audith.Basis
  webhooks:
    urls:
      - https://webhooks.gitter.im/e/08f753c8a771b72d290a
    on_success: change  # options: [always|never|change] default: always
    on_failure: always  # options: [always|never|change] default: always
    on_start: never     # options: [always|never|change] default: always
