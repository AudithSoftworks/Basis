machine:
  php:
    version: 5.5.9
  pre:
    - sudo curl -L -o /usr/bin/docker 'http://s3-external-1.amazonaws.com/circle-downloads/docker-1.6.2-circleci'; sudo chmod 0755 /usr/bin/docker; true

  services:
    - docker

general:
  artifacts:
    - "./storage/coverage"

notify:
  webhooks:
    - url: https://webhooks.gitter.im/e/251b9f310b8c9e8855f9
    - url: https://webhooks.gitter.im/e/6dbdffdc3ba4745e2165

dependencies:
  cache_directories:
    - ~/.docker
    - ~/Basis/node_modules
    - ~/Basis/public/bower_components
    - ~/Basis/vendor

  override:
    # Info & Prelim
    - pwd && docker -v && docker info
    - if [[ ! -d ~/.docker ]]; then mkdir -p ~/.docker; fi
    - chmod -R 0777 ./storage/logs

    ########################################################################
    # Parallelism: Node-0 => PHP 5.5, Node-1 => PHP 5.6, Node-2 => HHVM
    ########################################################################

    # Docker build: Nginx & caching
    - if [[ -e ~/.docker/audithsoftworks-basis-nginx.tar ]]; then docker load -i ~/.docker/audithsoftworks-basis-nginx.tar; else cat storage/build/scripts/nginx.Dockerfile | docker build -t audithsoftworks/basis:nginx -; fi
    - if [[ ! -e ~/.docker/audithsoftworks-basis-nginx.tar ]]; then docker save audithsoftworks/basis:nginx > ~/.docker/audithsoftworks-basis-nginx.tar; fi

    # Docker build: HHVM, PHP 5.5, 5.6 & caching
    - if [[ -e ~/.docker/audithsoftworks-basis-php_5.5.tar ]]; then docker load -i ~/.docker/audithsoftworks-basis-php_5.5.tar; else cat storage/build/scripts/php_5.5.Dockerfile | docker build -t audithsoftworks/basis:php_5.5 -; fi
    - if [[ ! -e ~/.docker/audithsoftworks-basis-php_5.5.tar ]]; then docker save audithsoftworks/basis:php_5.5 > ~/.docker/audithsoftworks-basis-php_5.5.tar; fi
    - if [[ -e ~/.docker/audithsoftworks-basis-php_5.6.tar ]]; then docker load -i ~/.docker/audithsoftworks-basis-php_5.6.tar; else cat storage/build/scripts/php_5.6.Dockerfile | docker build -t audithsoftworks/basis:php_5.6 -; fi
    - if [[ ! -e ~/.docker/audithsoftworks-basis-php_5.6.tar ]]; then docker save audithsoftworks/basis:php_5.6 > ~/.docker/audithsoftworks-basis-php_5.6.tar; fi
    - if [[ -e ~/.docker/audithsoftworks-basis-hhvm.tar ]]; then docker load -i ~/.docker/audithsoftworks-basis-hhvm.tar; else cat storage/build/scripts/hhvm.Dockerfile | docker build -t audithsoftworks/basis:hhvm -; fi
    - if [[ ! -e ~/.docker/audithsoftworks-basis-hhvm.tar ]]; then docker save audithsoftworks/basis:hhvm > ~/.docker/audithsoftworks-basis-hhvm.tar; fi

    # Docker build: PHP-FPM 5.5, 5.6 & caching
    - if [[ -e ~/.docker/audithsoftworks-basis-php_5.5-fpm.tar ]]; then docker load -i ~/.docker/audithsoftworks-basis-php_5.5-fpm.tar; else cat storage/build/scripts/php_5.5-fpm.Dockerfile | docker build -t audithsoftworks/basis:php_5.5-fpm -; fi
    - if [[ ! -e ~/.docker/audithsoftworks-basis-php_5.5-fpm.tar ]]; then docker save audithsoftworks/basis:php_5.5-fpm > ~/.docker/audithsoftworks-basis-php_5.5-fpm.tar; fi
    - if [[ -e ~/.docker/audithsoftworks-basis-php_5.6-fpm.tar ]]; then docker load -i ~/.docker/audithsoftworks-basis-php_5.6-fpm.tar; else cat storage/build/scripts/php_5.6-fpm.Dockerfile | docker build -t audithsoftworks/basis:php_5.6-fpm -; fi
    - if [[ ! -e ~/.docker/audithsoftworks-basis-php_5.6-fpm.tar ]]; then docker save audithsoftworks/basis:php_5.6-fpm > ~/.docker/audithsoftworks-basis-php_5.6-fpm.tar; fi

    # Docker run: MySQL 5.5, 5.6, 5.7
    - docker run -ti --name mysql-5.5 -e MYSQL_DATABASE=basis -e MYSQL_ALLOW_EMPTY_PASSWORD=true -d mysql:5.5
    - docker run -ti --name mysql-5.6 -e MYSQL_DATABASE=basis -e MYSQL_ALLOW_EMPTY_PASSWORD=true -d mysql:5.6
    - docker run -ti --name mysql-5.7 -e MYSQL_DATABASE=basis -e MYSQL_ALLOW_EMPTY_PASSWORD=true -d mysql:5.7

    # Docker run: PgSQL 9.2, 9.3, 9.4
    - docker run -ti --name postgres-9.2 -d postgres:9.2 && sleep 15 && psql -h $(docker inspect -f '{{ .NetworkSettings.IPAddress }}' postgres-9.2) -U postgres -c "CREATE DATABASE basis;"
    - docker run -ti --name postgres-9.3 -d postgres:9.3 && sleep 15 && psql -h $(docker inspect -f '{{ .NetworkSettings.IPAddress }}' postgres-9.3) -U postgres -c "CREATE DATABASE basis;"
    - docker run -ti --name postgres-9.4 -d postgres:9.4 && sleep 15 && psql -h $(docker inspect -f '{{ .NetworkSettings.IPAddress }}' postgres-9.4) -U postgres -c "CREATE DATABASE basis;"

    # Docker run: HHVM, PHP 5.5, 5.6 & PHP-FPM 5.5, 5.6
    - docker run -ti --name hhvm -v `pwd`:/home/basis -d brunoric/hhvm
    - docker run -ti --name php-5.5 -v `pwd`:/home/basis -d audithsoftworks/basis:php_5.5
    - docker run -ti --name php-5.6 -v `pwd`:/home/basis -d audithsoftworks/basis:php_5.6
    - docker run -ti --name php-fpm-5.5 -v `pwd`:/home/basis -d audithsoftworks/basis:php_5.5-fpm
    - docker run -ti --name php-fpm-5.6 -v `pwd`:/home/basis -d audithsoftworks/basis:php_5.6-fpm

    # 3x Nginx with separate PHP-FPM and HHVM versions
    - case $CIRCLE_NODE_INDEX in
      0) cat `pwd`/storage/build/configs/nginx.conf | sed s/\<FPM_IP_ADDR_HERE\>/$(docker inspect -f '{{ .NetworkSettings.IPAddress }}' php-fpm-5.5)/g | tee /tmp/nginx-php-fpm-5.5.conf ;;
      1) cat `pwd`/storage/build/configs/nginx.conf | sed s/\<FPM_IP_ADDR_HERE\>/$(docker inspect -f '{{ .NetworkSettings.IPAddress }}' php-fpm-5.6)/g | tee /tmp/nginx-php-fpm-5.6.conf ;;
      2) cat `pwd`/storage/build/configs/nginx.conf | sed s/\<FPM_IP_ADDR_HERE\>/$(docker inspect -f '{{ .NetworkSettings.IPAddress }}' hhvm)/g | tee /tmp/nginx-hhvm.conf ;;
      esac
    - case $CIRCLE_NODE_INDEX in
      0) docker run -ti --name nginx-for-php-fpm-5.5 -v /tmp/nginx-php-fpm-5.5.conf:/etc/nginx/conf.d/default.conf:ro -v `pwd`:/home/basis -d audithsoftworks/basis:nginx ;;
      1) docker run -ti --name nginx-for-php-fpm-5.6 -v /tmp/nginx-php-fpm-5.6.conf:/etc/nginx/conf.d/default.conf:ro -v `pwd`:/home/basis -d audithsoftworks/basis:nginx ;;
      2) docker run -ti --name nginx-for-hhvm -v /tmp/nginx-hhvm.conf:/etc/nginx/conf.d/default.conf:ro -v `pwd`:/home/basis -d audithsoftworks/basis:nginx ;;
      esac
    - printenv
    - case $CIRCLE_NODE_INDEX in
      0) sudo lxc-attach -n "$(docker inspect --format '{{.Id}}' php-5.5)" -- /bin/sh -c "echo $(docker inspect -f '{{ .NetworkSettings.IPAddress }}' nginx-for-php-fpm-5.5) basis.audith.org | tee -a /etc/hosts" ;;
      1) sudo lxc-attach -n "$(docker inspect --format '{{.Id}}' php-5.6)" -- /bin/sh -c "echo $(docker inspect -f '{{ .NetworkSettings.IPAddress }}' nginx-for-php-fpm-5.6) basis.audith.org | tee -a /etc/hosts" ;;
      2) sudo lxc-attach -n "$(docker inspect --format '{{.Id}}' hhvm)" -- /bin/sh -c "echo $(docker inspect -f '{{ .NetworkSettings.IPAddress }}' nginx-for-hhvm) basis.audith.org | tee -a /etc/hosts" ;;
      esac
    - case $CIRCLE_NODE_INDEX in 0) export PHP_CONTAINER=php-5.5 ;; 1) export PHP_CONTAINER=php-5.6 ;; 2) export PHP_CONTAINER=hhvm ;; esac
      && echo
        'cd /home/basis && npm update && bower --config.interactive=false --allow-root update;'
        'git clone --depth=1 https://github.com/google/woff2.git /home/basis/storage/build/tools/woff2;'
        'cd /home/basis/storage/build/tools/woff2 && git submodule init && git submodule update && make clean all;'
        'git clone --depth=1 https://github.com/zoltan-dulac/css3FontConverter.git /home/basis/storage/build/tools/css3_font_converter;'
        'cp -r /home/basis/public/bower_components/bootstrap/fonts /home/basis/public/fonts/glyphicons;'
        'cp -r /home/basis/public/bower_components/fontawesome/fonts  /home/basis/public/fonts/font_awesome;'
        'cp -r /home/basis/public/bower_components/google-fonts/ofl/armata /home/basis/public/fonts/armata;'
        'cp -r /home/basis/public/bower_components/google-fonts/ofl/ptsans /home/basis/public/fonts/pt_sans;'
        'cp -r /home/basis/public/bower_components/google-fonts/ofl/marcellus /home/basis/public/fonts/marcellus;'
        'cp -r /home/basis/public/bower_components/google-fonts/ofl/pontanosans /home/basis/public/fonts/pontano_sans;'
        'cp -r /home/basis/public/bower_components/google-fonts/ofl/montserrat /home/basis/public/fonts/montserrat;'
        'cp -r /home/basis/public/bower_components/google-fonts/apache/opensans /home/basis/public/fonts/opensans;'
        'export PATH=$PATH:/home/basis/storage/build/tools/sfnt2woff:/home/basis/storage/build/tools/woff2 && chmod -R +x /home/basis/storage/build/tools;'
        'cd /home/basis && compass compile && gulp;'
      | sudo lxc-attach -n "$(docker inspect --format '{{.Id}}' $PHP_CONTAINER)" -- /bin/sh

#    - sudo lxc-attach -n "$(docker inspect --format '{{.Id}}' $PHP_CONTAINER)" -- /bin/sh -c 'cd /home/basis && npm update && bower --config.interactive=false --allow-root update' # docker exec php-5.5 /bin/sh -c '...'
#    - sudo lxc-attach -n "$(docker inspect --format '{{.Id}}' $PHP_CONTAINER)" -- /bin/sh -c 'git clone --depth=1 https://github.com/google/woff2.git /home/basis/storage/build/tools/woff2'
#    - sudo lxc-attach -n "$(docker inspect --format '{{.Id}}' $PHP_CONTAINER)" -- /bin/sh -c 'cd /home/basis/storage/build/tools/woff2 && git submodule init && git submodule update && make clean all'
#    - sudo lxc-attach -n "$(docker inspect --format '{{.Id}}' $PHP_CONTAINER)" -- /bin/sh -c 'git clone --depth=1 https://github.com/zoltan-dulac/css3FontConverter.git /home/basis/storage/build/tools/css3_font_converter'
#    - sudo lxc-attach -n "$(docker inspect --format '{{.Id}}' $PHP_CONTAINER)" -- /bin/sh -c 'cp -r /home/basis/public/bower_components/bootstrap/fonts /home/basis/public/fonts/glyphicons'
#    - sudo lxc-attach -n "$(docker inspect --format '{{.Id}}' $PHP_CONTAINER)" -- /bin/sh -c 'cp -r /home/basis/public/bower_components/fontawesome/fonts  /home/basis/public/fonts/font_awesome'
#    - sudo lxc-attach -n "$(docker inspect --format '{{.Id}}' $PHP_CONTAINER)" -- /bin/sh -c 'cp -r /home/basis/public/bower_components/google-fonts/ofl/armata /home/basis/public/fonts/armata'
#    - sudo lxc-attach -n "$(docker inspect --format '{{.Id}}' $PHP_CONTAINER)" -- /bin/sh -c 'cp -r /home/basis/public/bower_components/google-fonts/ofl/ptsans /home/basis/public/fonts/pt_sans'
#    - sudo lxc-attach -n "$(docker inspect --format '{{.Id}}' $PHP_CONTAINER)" -- /bin/sh -c 'cp -r /home/basis/public/bower_components/google-fonts/ofl/marcellus /home/basis/public/fonts/marcellus'
#    - sudo lxc-attach -n "$(docker inspect --format '{{.Id}}' $PHP_CONTAINER)" -- /bin/sh -c 'cp -r /home/basis/public/bower_components/google-fonts/ofl/pontanosans /home/basis/public/fonts/pontano_sans'
#    - sudo lxc-attach -n "$(docker inspect --format '{{.Id}}' $PHP_CONTAINER)" -- /bin/sh -c 'cp -r /home/basis/public/bower_components/google-fonts/ofl/montserrat /home/basis/public/fonts/montserrat'
#    - sudo lxc-attach -n "$(docker inspect --format '{{.Id}}' $PHP_CONTAINER)" -- /bin/sh -c 'cp -r /home/basis/public/bower_components/google-fonts/apache/opensans /home/basis/public/fonts/opensans'
#    - sudo lxc-attach -n "$(docker inspect --format '{{.Id}}' $PHP_CONTAINER)" -- /bin/sh -c 'export PATH=$PATH:/home/basis/storage/build/tools/sfnt2woff:/home/basis/storage/build/tools/woff2 && chmod -R +x /home/basis/storage/build/tools'

#    - sudo lxc-attach -n "$(docker inspect --format '{{.Id}}' php-5.5)" -- /bin/sh -c 'cd /home/basis && PATH=$PATH:/home/basis/storage/build/tools/sfnt2woff:/home/basis/storage/build/tools/woff2 ./storage/build/tools/css3_font_converter/convertFonts.sh --use-font-weight --output=public/fonts/montserrat/stylesheet.css public/fonts/montserrat/*.ttf'
#    - sudo lxc-attach -n "$(docker inspect --format '{{.Id}}' php-5.5)" -- /bin/sh -c 'cd /home/basis && PATH=$PATH:/home/basis/storage/build/tools/sfnt2woff:/home/basis/storage/build/tools/woff2 ./storage/build/tools/css3_font_converter/convertFonts.sh --use-font-weight --output=public/fonts/pt_sans/stylesheet.css public/fonts/pt_sans/*.ttf'
#    - sudo lxc-attach -n "$(docker inspect --format '{{.Id}}' php-5.5)" -- /bin/sh -c 'cd /home/basis && PATH=$PATH:/home/basis/storage/build/tools/sfnt2woff:/home/basis/storage/build/tools/woff2 ./storage/build/tools/css3_font_converter/convertFonts.sh --use-font-weight --output=public/fonts/pontano_sans/stylesheet.css public/fonts/pontano_sans/*.ttf'
#    - sudo lxc-attach -n "$(docker inspect --format '{{.Id}}' php-5.5)" -- /bin/sh -c 'cd /home/basis && PATH=$PATH:/home/basis/storage/build/tools/sfnt2woff:/home/basis/storage/build/tools/woff2 ./storage/build/tools/css3_font_converter/convertFonts.sh --use-font-weight --output=public/fonts/armata/stylesheet.css public/fonts/armata/*.ttf'
#    - sudo lxc-attach -n "$(docker inspect --format '{{.Id}}' php-5.5)" -- /bin/sh -c 'cd /home/basis && PATH=$PATH:/home/basis/storage/build/tools/sfnt2woff:/home/basis/storage/build/tools/woff2 ./storage/build/tools/css3_font_converter/convertFonts.sh --use-font-weight --output=public/fonts/marcellus/stylesheet.css public/fonts/marcellus/*.ttf'
#    - sudo lxc-attach -n "$(docker inspect --format '{{.Id}}' php-5.5)" -- /bin/sh -c 'cd /home/basis && PATH=$PATH:/home/basis/storage/build/tools/sfnt2woff:/home/basis/storage/build/tools/woff2 ./storage/build/tools/css3_font_converter/convertFonts.sh --use-font-weight --output=public/fonts/opensans/stylesheet.css public/fonts/opensans/*.ttf'

#    - sudo lxc-attach -n "$(docker inspect --format '{{.Id}}' $PHP_CONTAINER)" -- /bin/sh -c 'cd /home/basis && compass compile && gulp'
    - cat .env.example | sed s/DB_HOST=.*/DB_HOST=$(docker inspect -f '{{ .NetworkSettings.IPAddress }}' mysql-5.5)/g | sed s/DB_USERNAME=.*/DB=mysql/g | sed s/DB_PASSWORD=.*//g | tee .env
    - sudo lxc-attach -n "$(docker inspect --format '{{.Id}}' php-5.5)" -- /bin/sh -c 'cd /home/basis && composer update --no-interaction'
test:
  override:
    # Testing PHP 5.5 and 5.6 against MySQL 5.5
    - sudo lxc-attach -n "$(docker inspect --format '{{.Id}}' $PHP_CONTAINER)" -- /bin/sh -c 'cd /home/basis && ./vendor/bin/phpunit --debug --verbose':
        parallel: true

    # Switching to MySQL 5.6
    - cat .env | sed s/DB_HOST=.*/DB_HOST=$(docker inspect -f '{{ .NetworkSettings.IPAddress }}' mysql-5.6)/g | sed s/DB=.*/DB=mysql/g | tee .env

    # Testing PHP 5.5 and 5.6 against MySQL 5.6
    - sudo lxc-attach -n "$(docker inspect --format '{{.Id}}' $PHP_CONTAINER)" -- /bin/sh -c 'cd /home/basis && ./vendor/bin/phpunit --debug --verbose':
        parallel: true

    # Switching to MySQL 5.7
    - cat .env | sed s/DB_HOST=.*/DB_HOST=$(docker inspect -f '{{ .NetworkSettings.IPAddress }}' mysql-5.7)/g | sed s/DB=.*/DB=mysql/g | tee .env

    # Testing PHP 5.5 and 5.6 against MySQL 5.6
    - sudo lxc-attach -n "$(docker inspect --format '{{.Id}}' $PHP_CONTAINER)" -- /bin/sh -c 'cd /home/basis && ./vendor/bin/phpunit --debug --verbose':
        parallel: true

    # Switching to PgSQL 9.2
    - cat .env | sed s/DB_HOST=.*/DB_HOST=$(docker inspect -f '{{ .NetworkSettings.IPAddress }}' postgres-9.2)/g | sed s/DB=.*/DB=pgsql/g | tee .env

    # Testing PHP 5.5 and 5.6 against PgSQL 9.2
    - if [[ $PHP_CONTAINER != hhvm ]]; then sudo lxc-attach -n "$(docker inspect --format '{{.Id}}' $PHP_CONTAINER)" -- /bin/sh -c 'cd /home/basis && ./vendor/bin/phpunit --debug --verbose'; fi:
        parallel: true

    # Switching to PgSQL 9.3
    - cat .env | sed s/DB_HOST=.*/DB_HOST=$(docker inspect -f '{{ .NetworkSettings.IPAddress }}' postgres-9.3)/g | sed s/DB=.*/DB=pgsql/g | tee .env

    # Testing PHP 5.5 and 5.6 against PgSQL 9.3
    - if [[ $PHP_CONTAINER != hhvm ]]; then sudo lxc-attach -n "$(docker inspect --format '{{.Id}}' $PHP_CONTAINER)" -- /bin/sh -c 'cd /home/basis && ./vendor/bin/phpunit --debug --verbose'; fi:
        parallel: true

    # Switching to PgSQL 9.4
    - cat .env | sed s/DB_HOST=.*/DB_HOST=$(docker inspect -f '{{ .NetworkSettings.IPAddress }}' postgres-9.4)/g | sed s/DB=.*/DB=pgsql/g | tee .env

    # Testing PHP 5.5 and 5.6 against PgSQL 9.4
    - if [[ $PHP_CONTAINER != hhvm ]]; then sudo lxc-attach -n "$(docker inspect --format '{{.Id}}' $PHP_CONTAINER)" -- /bin/sh -c 'cd /home/basis && ./vendor/bin/phpunit --debug --verbose'; fi:
        parallel: true

  post:
    - mkdir -p $CIRCLE_TEST_REPORTS/phpunit/
    - cp ./storage/coverage/*.xml $CIRCLE_TEST_REPORTS/phpunit/
    - wget https://scrutinizer-ci.com/ocular.phar
    - if [[ $CIRCLE_NODE_INDEX == 0 ]]; then php ocular.phar code-coverage:upload --format=php-clover ./storage/coverage/coverage.xml; fi
