machine:
  pre:
    - curl -L https://github.com/docker/compose/releases/download/1.5.2/docker-compose-`uname -s`-`uname -m` > docker-compose; sudo mv docker-compose /usr/bin/docker-compose; sudo chmod 0755 /usr/bin/docker-compose
  services:
    - docker

general:
  artifacts:
    - "./storage/coverage"

notify:
  webhooks:
    - url: https://webhooks.gitter.im/e/251b9f310b8c9e8855f9

dependencies:
  cache_directories:
    - ~/Basis/node_modules
    - ~/Basis/public/bower_components
    - ~/Basis/vendor

  override:
    # Info & Prelim
    - pwd && docker -v && docker info && docker-compose -v
    - chmod -R 0777 ./storage/logs

    ########################################################################
    # Parallelism: Node-0 => PHP 5.6, Node-1 => PHP 7, Node-2 => HHVM
    ########################################################################

    # Docker build
    - if [[ $CIRCLE_BRANCH == 'upgrades' ]]; then docker build -qf storage/build/scripts/nginx/Dockerfile -t audithsoftworks/basis:nginx .; fi;
    - if [[ $CIRCLE_BRANCH == 'upgrades' && `expr $CIRCLE_NODE_INDEX % $CIRCLE_NODE_TOTAL` == 0 ]]; then docker build -qf storage/build/scripts/php_5.6/Dockerfile -t audithsoftworks/basis:php_5.6 .; fi;
      if [[ $CIRCLE_BRANCH == 'upgrades' && `expr $CIRCLE_NODE_INDEX % $CIRCLE_NODE_TOTAL` == 1 ]]; then docker build -qf storage/build/scripts/php_7/Dockerfile -t audithsoftworks/basis:php_7 .; fi;
      if [[ $CIRCLE_BRANCH == 'upgrades' && `expr $CIRCLE_NODE_INDEX % $CIRCLE_NODE_TOTAL` == 2 ]]; then docker build -qf storage/build/scripts/hhvm/Dockerfile -t audithsoftworks/basis:hhvm .; fi;
    - if [[ $CIRCLE_BRANCH == 'upgrades' && `expr $CIRCLE_NODE_INDEX % $CIRCLE_NODE_TOTAL` == 0 ]]; then docker build -qf storage/build/scripts/php_5.6-fpm/Dockerfile -t audithsoftworks/basis:php_5.6-fpm .; fi;
      if [[ $CIRCLE_BRANCH == 'upgrades' && `expr $CIRCLE_NODE_INDEX % $CIRCLE_NODE_TOTAL` == 1 ]]; then docker build -qf storage/build/scripts/php_7-fpm/Dockerfile -t audithsoftworks/basis:php_7-fpm .; fi;
    - docker images

    # Docker Compose
    - case `expr $CIRCLE_NODE_INDEX % $CIRCLE_NODE_TOTAL` in 0) export DOCKER_COMPOSE_FILE='./docker-compose-php56.yml' ;; 1) export DOCKER_COMPOSE_FILE='./docker-compose-php7.yml' ;; 2) export DOCKER_COMPOSE_FILE='./docker-compose-hhvm.yml' ;; esac
      && docker-compose -f $DOCKER_COMPOSE_FILE up -d;

    # Create database for MariaDb and PgSQL
    - sleep 5;
      docker-compose ps;
      mysql -h $(docker inspect -f '{{ .NetworkSettings.IPAddress }}' basis_mariadb10_1) -u root -e "CREATE DATABASE IF NOT EXISTS basis;";
      if [[ `expr $CIRCLE_NODE_INDEX % $CIRCLE_NODE_TOTAL` != 2 ]]; then psql -h $(docker inspect -f '{{ .NetworkSettings.IPAddress }}' basis_postgres94_1) -U postgres -c "CREATE DATABASE basis;"; fi;

    # Fix for /etc/hosts file
    - sudo lxc-attach -n "$(docker inspect --format '{{.Id}}' basis_phpCli_1)" -- bash -c "echo $(docker inspect -f '{{ .NetworkSettings.IPAddress }}' basis_nginx_1) basis.audith.org | tee -a /etc/hosts";

    # dotEnv file for initial test setup
    - cat .env.example | sed s/DB_HOST=.*/DB_HOST=mariadb10/g | sed s/DB_USERNAME=.*/DB=mysql/g | sed s/DB_PASSWORD=.*//g | tee .env;

    # Build project dependencies
    - sudo lxc-attach -n "$(docker inspect --format '{{.Id}}' basis_phpCli_1)" -- bash -c "
        cd /home/basis && npm update && bower --config.interactive=false --allow-root update;

        cd /home/basis/public/bower_components/fine-uploader && npm install && grunt package;

        cd /home/basis && git clone --depth=1 --branch=1.14.0 https://github.com/jzaefferer/jquery-validation.git /home/basis/public/bower_components/jquery.validation;
        cd /home/basis/public/bower_components/jquery.validation && rm -rf .git && npm install && grunt;

        cd /home/basis && git clone --depth=1 https://github.com/google/woff2.git /home/basis/storage/build/tools/woff2;
        cd /home/basis/storage/build/tools/woff2 && git submodule init && git submodule update && make clean all;

        cd /home/basis && git clone --depth=1 https://github.com/zoltan-dulac/css3FontConverter.git /home/basis/storage/build/tools/css3_font_converter;

        cp -r ./public/bower_components/bootstrap/fonts ./public/fonts/glyphicons;
        cp -r ./public/bower_components/fontawesome/fonts ./public/fonts/font_awesome;
        cp -r ./public/bower_components/simple-line-icons-webfont/fonts ./public/fonts/simple-line-icons;
        cp -r ./public/bower_components/google-fonts/apache/opensans ./public/fonts/opensans;
        cp -r ./public/bower_components/google-fonts/ofl/armata ./public/fonts/armata;
        cp -r ./public/bower_components/google-fonts/ofl/marcellus ./public/fonts/marcellus;
        cp -r ./public/bower_components/google-fonts/ofl/pontanosans ./public/fonts/pontano_sans;
        cp -r ./public/bower_components/google-fonts/ofl/montserrat ./public/fonts/montserrat;

        mkdir -p ./public/build/images; cp -r ./public/bower_components/jquery.uniform/dist/images/default/* ./public/build/images;

        chmod -R +x /home/basis/storage/build/tools;
        PATH=$PATH:/home/basis/storage/build/tools/sfnt2woff:/home/basis/storage/build/tools/woff2 ./storage/build/tools/css3_font_converter/convertFonts.sh --use-font-weight --output=public/fonts/simple-line-icons/stylesheet.css public/fonts/simple-line-icons/*.ttf;
        PATH=$PATH:/home/basis/storage/build/tools/sfnt2woff:/home/basis/storage/build/tools/woff2 ./storage/build/tools/css3_font_converter/convertFonts.sh --use-font-weight --output=public/fonts/opensans/stylesheet.css public/fonts/opensans/*.ttf;
        PATH=$PATH:/home/basis/storage/build/tools/sfnt2woff:/home/basis/storage/build/tools/woff2 ./storage/build/tools/css3_font_converter/convertFonts.sh --use-font-weight --output=public/fonts/montserrat/stylesheet.css public/fonts/montserrat/*.ttf;
        PATH=$PATH:/home/basis/storage/build/tools/sfnt2woff:/home/basis/storage/build/tools/woff2 ./storage/build/tools/css3_font_converter/convertFonts.sh --use-font-weight --output=public/fonts/pontano_sans/stylesheet.css public/fonts/pontano_sans/*.ttf;
        PATH=$PATH:/home/basis/storage/build/tools/sfnt2woff:/home/basis/storage/build/tools/woff2 ./storage/build/tools/css3_font_converter/convertFonts.sh --use-font-weight --output=public/fonts/armata/stylesheet.css public/fonts/armata/*.ttf;
        PATH=$PATH:/home/basis/storage/build/tools/sfnt2woff:/home/basis/storage/build/tools/woff2 ./storage/build/tools/css3_font_converter/convertFonts.sh --use-font-weight --output=public/fonts/marcellus/stylesheet.css public/fonts/marcellus/*.ttf;

        compass compile;
        gulp;
        composer selfupdate && composer update --prefer-source --no-interaction;
      ";
test:
  override:
    # Testing against MariaDb
    - sudo lxc-attach -n "$(docker inspect --format '{{.Id}}' basis_phpCli_1)" -- bash -c 'cd /home/basis; ./vendor/bin/phpunit --debug --verbose':
        parallel: true

    # Switching to PgSQL 9.4
    - cat .env | sed s/DB_HOST=.*/DB_HOST=postgres94/g | sed s/DB=.*/DB=pgsql/g | tee .env

    # Testing against PgSQL 9.4
    - if [[ `expr $CIRCLE_NODE_INDEX % $CIRCLE_NODE_TOTAL` != 2 ]]; then sudo lxc-attach -n "$(docker inspect --format '{{.Id}}' basis_phpCli_1)" -- bash -c 'cd /home/basis; ./vendor/bin/phpunit --debug --verbose'; fi:
        parallel: true

  post:
    - mkdir -p $CIRCLE_TEST_REPORTS/phpunit/
    - cp ./storage/coverage/*.xml $CIRCLE_TEST_REPORTS/phpunit/
    - wget https://scrutinizer-ci.com/ocular.phar
    - if [[ `expr $CIRCLE_NODE_INDEX % $CIRCLE_NODE_TOTAL` == 0 ]]; then php ocular.phar code-coverage:upload --format=php-clover ./storage/coverage/coverage.xml; fi
